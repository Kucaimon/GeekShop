import { useState } from "react";
import { useNavigate } from "react-router-dom";
import useCartStore from "../../store/useCartStore";
import "./Checkout.scss";

const Checkout = () => {
  const navigate = useNavigate();
  const { items, getTotalPrice, clearCart } = useCartStore();

  const [currentStep, setCurrentStep] = useState(1);
  const [orderData, setOrderData] = useState({
    // –®–∞–≥ 1: –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
    firstName: "",
    lastName: "",
    email: "",
    phone: "",

    // –®–∞–≥ 2: –î–æ—Å—Ç–∞–≤–∫–∞
    deliveryMethod: "courier",
    city: "",
    address: "",
    postalCode: "",

    // –®–∞–≥ 3: –û–ø–ª–∞—Ç–∞
    paymentMethod: "card",
    cardNumber: "",
    cardExpiry: "",
    cardCvv: "",
  });

  const totalPrice = getTotalPrice();

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setOrderData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const handleNextStep = () => {
    setCurrentStep((prev) => prev + 1);
  };

  const handlePrevStep = () => {
    setCurrentStep((prev) => prev - 1);
  };

  const handleSubmitOrder = (e) => {
    e.preventDefault();

    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –±—ç–∫–µ–Ω–¥
    console.log("–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω:", {
      orderData,
      items,
      totalPrice,
      orderNumber: Math.random().toString(36).substr(2, 9).toUpperCase(),
    });

    // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    clearCart();
    setCurrentStep(4); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —à–∞–≥—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  };

  // –®–∞–≥ 1: –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
  const renderStep1 = () => (
    <div className="checkout-step">
      <h2>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ</h2>
      <div className="checkout-form__grid">
        <div className="checkout-form__group">
          <label>–ò–º—è *</label>
          <input
            type="text"
            name="firstName"
            value={orderData.firstName}
            onChange={handleInputChange}
            required
          />
        </div>

        <div className="checkout-form__group">
          <label>–§–∞–º–∏–ª–∏—è *</label>
          <input
            type="text"
            name="lastName"
            value={orderData.lastName}
            onChange={handleInputChange}
            required
          />
        </div>

        <div className="checkout-form__group">
          <label>Email *</label>
          <input
            type="email"
            name="email"
            value={orderData.email}
            onChange={handleInputChange}
            required
          />
        </div>

        <div className="checkout-form__group">
          <label>–¢–µ–ª–µ—Ñ–æ–Ω *</label>
          <input
            type="tel"
            name="phone"
            value={orderData.phone}
            onChange={handleInputChange}
            required
          />
        </div>
      </div>
    </div>
  );

  // –®–∞–≥ 2: –î–æ—Å—Ç–∞–≤–∫–∞
  const renderStep2 = () => (
    <div className="checkout-step">
      <h2>–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏</h2>

      <div className="checkout-form__group">
        <label>–ú–µ—Ç–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏</label>
        <select
          name="deliveryMethod"
          value={orderData.deliveryMethod}
          onChange={handleInputChange}
        >
          <option value="courier">–ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</option>
          <option value="pickup">–°–∞–º–æ–≤—ã–≤–æ–∑</option>
          <option value="post">–ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏</option>
        </select>
      </div>

      {orderData.deliveryMethod !== "pickup" && (
        <div className="checkout-form__grid">
          <div className="checkout-form__group">
            <label>–ì–æ—Ä–æ–¥ *</label>
            <input
              type="text"
              name="city"
              value={orderData.city}
              onChange={handleInputChange}
              required
            />
          </div>

          <div className="checkout-form__group">
            <label>–ê–¥—Ä–µ—Å *</label>
            <input
              type="text"
              name="address"
              value={orderData.address}
              onChange={handleInputChange}
              required
            />
          </div>

          <div className="checkout-form__group">
            <label>–ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å</label>
            <input
              type="text"
              name="postalCode"
              value={orderData.postalCode}
              onChange={handleInputChange}
            />
          </div>
        </div>
      )}
    </div>
  );

  // –®–∞–≥ 3: –û–ø–ª–∞—Ç–∞
  const renderStep3 = () => (
    <div className="checkout-step">
      <h2>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h2>

      <div className="checkout-form__group">
        <label>–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã</label>
        <select
          name="paymentMethod"
          value={orderData.paymentMethod}
          onChange={handleInputChange}
        >
          <option value="card">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</option>
          <option value="cash">–ù–∞–ª–∏—á–Ω—ã–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</option>
          <option value="online">–û–Ω–ª–∞–π–Ω-–ø–µ—Ä–µ–≤–æ–¥</option>
        </select>
      </div>

      {orderData.paymentMethod === "card" && (
        <div className="checkout-form__grid">
          <div className="checkout-form__group">
            <label>–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã *</label>
            <input
              type="text"
              name="cardNumber"
              placeholder="0000 0000 0000 0000"
              value={orderData.cardNumber}
              onChange={handleInputChange}
              required
            />
          </div>

          <div className="checkout-form__group">
            <label>–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è *</label>
            <input
              type="text"
              name="cardExpiry"
              placeholder="MM/YY"
              value={orderData.cardExpiry}
              onChange={handleInputChange}
              required
            />
          </div>

          <div className="checkout-form__group">
            <label>CVV *</label>
            <input
              type="text"
              name="cardCvv"
              placeholder="123"
              value={orderData.cardCvv}
              onChange={handleInputChange}
              required
            />
          </div>
        </div>
      )}
    </div>
  );

  // –®–∞–≥ 4: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  const renderStep4 = () => (
    <div className="checkout-step checkout-step--success">
      <div className="checkout-success">
        <div className="checkout-success__icon">üéâ</div>
        <h2>–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!</h2>
        <p>
          –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑. –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞:{" "}
          <strong>
            GEEK-{Math.random().toString(36).substr(2, 6).toUpperCase()}
          </strong>
        </p>
        <p>–ù–∞ –≤–∞—à—É –ø–æ—á—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.</p>
        <button
          onClick={() => navigate("/")}
          className="checkout-success__button"
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
        </button>
      </div>
    </div>
  );

  if (items.length === 0 && currentStep !== 4) {
    return (
      <div className="checkout">
        <div className="checkout__container">
          <h1>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h1>
          <div className="checkout-empty">
            <p>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
            <button onClick={() => navigate("/catalog")}>
              –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="checkout">
      <div className="checkout__container">
        <h1>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h1>

        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
        {currentStep < 4 && (
          <div className="checkout-progress">
            <div className="checkout-progress__steps">
              {[1, 2, 3].map((step) => (
                <div
                  key={step}
                  className={`checkout-progress__step ${
                    step === currentStep
                      ? "active"
                      : step < currentStep
                      ? "completed"
                      : ""
                  }`}
                >
                  <span className="checkout-progress__number">{step}</span>
                  <span className="checkout-progress__label">
                    {step === 1 && "–î–∞–Ω–Ω—ã–µ"}
                    {step === 2 && "–î–æ—Å—Ç–∞–≤–∫–∞"}
                    {step === 3 && "–û–ø–ª–∞—Ç–∞"}
                  </span>
                </div>
              ))}
            </div>
          </div>
        )}

        <div className="checkout-content">
          {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –§–æ—Ä–º–∞ */}
          <div className="checkout-form">
            <form onSubmit={handleSubmitOrder}>
              {currentStep === 1 && renderStep1()}
              {currentStep === 2 && renderStep2()}
              {currentStep === 3 && renderStep3()}
              {currentStep === 4 && renderStep4()}

              {currentStep < 4 && (
                <div className="checkout-form__actions">
                  {currentStep > 1 && (
                    <button
                      type="button"
                      onClick={handlePrevStep}
                      className="checkout-form__button checkout-form__button--secondary"
                    >
                      –ù–∞–∑–∞–¥
                    </button>
                  )}

                  {currentStep < 3 ? (
                    <button
                      type="button"
                      onClick={handleNextStep}
                      className="checkout-form__button"
                    >
                      –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                    </button>
                  ) : (
                    <button
                      type="submit"
                      className="checkout-form__button checkout-form__button--primary"
                    >
                      –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                    </button>
                  )}
                </div>
              )}
            </form>
          </div>

          {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –ò—Ç–æ–≥–∏ –∑–∞–∫–∞–∑–∞ */}
          {currentStep < 4 && (
            <div className="checkout-summary">
              <h3>–í–∞—à –∑–∞–∫–∞–∑</h3>

              <div className="checkout-summary__items">
                {items.map((item) => (
                  <div key={item.id} className="checkout-summary-item">
                    <img src={item.image} alt={item.name} />
                    <div className="checkout-summary-item__info">
                      <span>{item.name}</span>
                      <span>
                        {item.quantity} √ó {item.price.toLocaleString("ru-RU")} ‚ÇΩ
                      </span>
                    </div>
                  </div>
                ))}
              </div>

              <div className="checkout-summary__total">
                <div className="checkout-summary__row">
                  <span>–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∏—Ç–æ–≥:</span>
                  <span>{totalPrice.toLocaleString("ru-RU")} ‚ÇΩ</span>
                </div>
                <div className="checkout-summary__row">
                  <span>–î–æ—Å—Ç–∞–≤–∫–∞:</span>
                  <span>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
                </div>
                <div className="checkout-summary__row checkout-summary__row--total">
                  <span>–ò—Ç–æ–≥–æ:</span>
                  <span>{totalPrice.toLocaleString("ru-RU")} ‚ÇΩ</span>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Checkout;
